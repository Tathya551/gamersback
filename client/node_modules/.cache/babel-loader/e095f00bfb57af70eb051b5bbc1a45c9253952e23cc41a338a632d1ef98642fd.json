{"ast":null,"code":"var _jsxFileName = \"D:\\\\gamersback\\\\client\\\\src\\\\components\\\\EditTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTaskForm = ({\n  task,\n  onTaskUpdated,\n  onCancel\n}) => {\n  _s();\n  const [title, setTitle] = useState(task.title);\n  const [description, setDescription] = useState(task.description);\n  const [dueDate, setDueDate] = useState(task.dueDate.split(\"T\")[0]);\n  const [status, setStatus] = useState(task.status);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const updatedTask = await axios.put(`http://localhost:5000/api/tasks/${task._id}`, {\n        title,\n        description,\n        dueDate,\n        status\n      });\n      onTaskUpdated(updatedTask.data);\n    } catch (error) {\n      console.error(\"Failed to update task:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(EditTaskForm, \"/8sU2Es1Ep8rjb3/xSMKeikhCFo=\");\n_c = EditTaskForm;\nexport default EditTaskForm;\nvar _c;\n$RefreshReg$(_c, \"EditTaskForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","EditTaskForm","task","onTaskUpdated","onCancel","_s","title","setTitle","description","setDescription","dueDate","setDueDate","split","status","setStatus","handleSubmit","e","preventDefault","updatedTask","put","_id","data","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["D:/gamersback/client/src/components/EditTaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst EditTaskForm = ({ task, onTaskUpdated, onCancel }) => {\r\n  const [title, setTitle] = useState(task.title);\r\n  const [description, setDescription] = useState(task.description);\r\n  const [dueDate, setDueDate] = useState(task.dueDate.split(\"T\")[0]);\r\n  const [status, setStatus] = useState(task.status);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const updatedTask = await axios.put(\r\n        `http://localhost:5000/api/tasks/${task._id}`,\r\n        {\r\n          title,\r\n          description,\r\n          dueDate,\r\n          status,\r\n        }\r\n      );\r\n      onTaskUpdated(updatedTask.data);\r\n    } catch (error) {\r\n      console.error(\"Failed to update task:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n\r\n      <button type=\"submit\">Update Task</button>\r\n      <button type=\"button\" onClick={onCancel}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditTaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC,aAAa;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACM,IAAI,CAACI,KAAK,CAAC;EAC9C,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAACM,IAAI,CAACM,WAAW,CAAC;EAChE,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAACM,IAAI,CAACQ,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EAClE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAACM,IAAI,CAACW,MAAM,CAAC;EAEjD,MAAME,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,WAAW,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAChC,mCAAkCjB,IAAI,CAACkB,GAAI,EAAC,EAC7C;QACEd,KAAK;QACLE,WAAW;QACXE,OAAO;QACPG;MACF,CACF,CAAC;MACDV,aAAa,CAACe,WAAW,CAACG,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEtB,OAAA;IAAMwB,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBAC3BzB,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAAyB,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrB7B,OAAA;QACE8B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEzB,KAAM;QACb0B,QAAQ,EAAGhB,CAAC,IAAKT,QAAQ,CAACS,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN7B,OAAA;MAAQ8B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1C7B,OAAA;MAAQ8B,IAAI,EAAC,QAAQ;MAACK,OAAO,EAAE/B,QAAS;MAAAqB,QAAA,EAAC;IAEzC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACxB,EAAA,CA1CIJ,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}