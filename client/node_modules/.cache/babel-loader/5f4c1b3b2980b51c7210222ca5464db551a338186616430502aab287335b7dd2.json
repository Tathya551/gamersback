{"ast":null,"code":"var _jsxFileName = \"D:\\\\gamersback\\\\client\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\n// Example TaskList.js or similar component\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]); // State to store fetched tasks\n\n  useEffect(() => {\n    // Fetch tasks when the component mounts\n    axios.get(\"http://localhost:5000/api/tasks\").then(response => {\n      setTasks(response.data); // Store fetched tasks in state\n    }).catch(error => console.log(\"There was an error fetching the tasks:\", error));\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? tasks.map((task // Render each task\n    ) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this)]\n    }, task._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) // Display this if no tasks are fetched\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","get","then","response","data","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","task","title","description","_id","_c","$RefreshReg$"],"sources":["D:/gamersback/client/src/components/TaskList.js"],"sourcesContent":["// Example TaskList.js or similar component\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]); // State to store fetched tasks\r\n\r\n  useEffect(() => {\r\n    // Fetch tasks when the component mounts\r\n    axios\r\n      .get(\"http://localhost:5000/api/tasks\")\r\n      .then((response) => {\r\n        setTasks(response.data); // Store fetched tasks in state\r\n      })\r\n      .catch((error) =>\r\n        console.log(\"There was an error fetching the tasks:\", error)\r\n      );\r\n  }, []); // Empty dependency array means this effect runs once on mount\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task List</h2>\r\n      {tasks.length > 0 ? (\r\n        tasks.map(\r\n          (\r\n            task // Render each task\r\n          ) => (\r\n            <div key={task._id}>\r\n              <h3>{task.title}</h3>\r\n              <p>{task.description}</p>\r\n              {/* Render other task properties as needed */}\r\n            </div>\r\n          )\r\n        )\r\n      ) : (\r\n        <p>No tasks found</p> // Display this if no tasks are fetched\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExCC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CACFO,GAAG,CAAC,iCAAiC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAK;MAClBH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IACXC,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEF,KAAK,CAC7D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEV,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBd,KAAK,CAACe,MAAM,GAAG,CAAC,GACff,KAAK,CAACgB,GAAG,CACP,CACEC,IAAI,CAAC;IAAA,kBAELpB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAKO,IAAI,CAACC;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBjB,OAAA;QAAAa,QAAA,EAAIO,IAAI,CAACE;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFjBG,IAAI,CAACG,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb,CAET,CAAC,gBAEDjB,OAAA;MAAAa,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IACvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAnCID,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}