{"ast":null,"code":"var _jsxFileName = \"D:\\\\gamersback\\\\client\\\\src\\\\components\\\\EditTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { updateTask } from \"../redux/tasksSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTaskForm = ({\n  task,\n  onCancel\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(task.title);\n  const [description, setDescription] = useState(task.description);\n  // Ensure the date is in the correct format for the date input field\n  const [dueDate, setDueDate] = useState(task.dueDate ? task.dueDate.split(\"T\")[0] : \"\");\n  const [status, setStatus] = useState(task.status);\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Create an object with the updated task information\n    const updatedTaskInfo = {\n      id: task._id,\n      title,\n      description,\n      dueDate,\n      status\n    };\n\n    // Dispatch the updateTask action with the updated task information\n    dispatch(updateTask(updatedTaskInfo));\n\n    // Optional: Call onCancel to close the form if it's part of a modal or toggle\n    onCancel();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dueDate\",\n        children: \"Due Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"dueDate\",\n        type: \"date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: \"Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"status\",\n        value: status,\n        onChange: e => setStatus(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(EditTaskForm, \"0trXeH0dv1WjaIRFZF6YpoxZNts=\", false, function () {\n  return [useDispatch];\n});\n_c = EditTaskForm;\nexport default EditTaskForm;\nvar _c;\n$RefreshReg$(_c, \"EditTaskForm\");","map":{"version":3,"names":["React","useState","useDispatch","updateTask","jsxDEV","_jsxDEV","EditTaskForm","task","onCancel","_s","dispatch","title","setTitle","description","setDescription","dueDate","setDueDate","split","status","setStatus","handleSubmit","e","preventDefault","updatedTaskInfo","id","_id","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["D:/gamersback/client/src/components/EditTaskForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateTask } from \"../redux/tasksSlice\";\r\n\r\nconst EditTaskForm = ({ task, onCancel }) => {\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useState(task.title);\r\n  const [description, setDescription] = useState(task.description);\r\n  // Ensure the date is in the correct format for the date input field\r\n  const [dueDate, setDueDate] = useState(\r\n    task.dueDate ? task.dueDate.split(\"T\")[0] : \"\"\r\n  );\r\n  const [status, setStatus] = useState(task.status);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Create an object with the updated task information\r\n    const updatedTaskInfo = {\r\n      id: task._id,\r\n      title,\r\n      description,\r\n      dueDate,\r\n      status,\r\n    };\r\n\r\n    // Dispatch the updateTask action with the updated task information\r\n    dispatch(updateTask(updatedTaskInfo));\r\n\r\n    // Optional: Call onCancel to close the form if it's part of a modal or toggle\r\n    onCancel();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"title\">Title:</label>\r\n        <input\r\n          id=\"title\"\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"description\">Description:</label>\r\n        <textarea\r\n          id=\"description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"dueDate\">Due Date:</label>\r\n        <input\r\n          id=\"dueDate\"\r\n          type=\"date\"\r\n          value={dueDate}\r\n          onChange={(e) => setDueDate(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"status\">Status:</label>\r\n        <select\r\n          id=\"status\"\r\n          value={status}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n        >\r\n          <option value=\"pending\">Pending</option>\r\n          <option value=\"in progress\">In Progress</option>\r\n          <option value=\"completed\">Completed</option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\">Update Task</button>\r\n      <button type=\"button\" onClick={onCancel}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditTaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}