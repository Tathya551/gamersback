{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchTasks = createAsyncThunk(\"tasks/fetchTasks\", async () => {\n  const response = await axios.get(\"http://localhost:5000/api/tasks\");\n  return response.data;\n});\nconst tasksSlice = createSlice({\n  name: \"tasks\",\n  initialState: {\n    items: [],\n    status: \"idle\",\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTasks.pending, (state, action) => {\n      state.status = \"loading\";\n    }).addCase(fetchTasks.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.items = action.payload;\n    }).addCase(fetchTasks.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    });\n  }\n});\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchTasks","response","get","data","tasksSlice","name","initialState","items","status","error","reducers","extraReducers","builder","addCase","pending","state","action","fulfilled","payload","rejected","message","reducer"],"sources":["D:/gamersback/client/src/redux/tasksSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchTasks = createAsyncThunk(\"tasks/fetchTasks\", async () => {\r\n  const response = await axios.get(\"http://localhost:5000/api/tasks\");\r\n  return response.data;\r\n});\r\n\r\nconst tasksSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState: {\r\n    items: [],\r\n    status: \"idle\",\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchTasks.pending, (state, action) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchTasks.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.items = action.payload;\r\n      })\r\n      .addCase(fetchTasks.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default tasksSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,iCAAiC,CAAC;EACnE,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;AAEF,MAAMC,UAAU,GAAGP,WAAW,CAAC;EAC7BQ,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,MAAM;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,UAAU,CAACc,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9CD,KAAK,CAACP,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDK,OAAO,CAACb,UAAU,CAACiB,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACP,MAAM,GAAG,WAAW;MAC1BO,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACE,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAACb,UAAU,CAACmB,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACP,MAAM,GAAG,QAAQ;MACvBO,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACP,KAAK,CAACW,OAAO;IACpC,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAehB,UAAU,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}