{"ast":null,"code":"var _jsxFileName = \"D:\\\\gamersback\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskList from \"./components/TaskList\";\nimport AddTaskForm from \"./components/AddTaskForm\";\nimport EditTaskForm from \"./components/EditTaskForm\"; // Import the new component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null); // State to track which task is being edited\n\n  useEffect(() => {\n    // Fetch tasks on component mount\n    axios.get(\"http://localhost:5000/api/tasks\").then(response => setTasks(response.data)).catch(error => console.error(\"Error fetching tasks:\", error));\n  }, []);\n  const handleAddTask = newTask => {\n    // Append the new task to the existing tasks state\n    setTasks(prev => [...prev, newTask]);\n  };\n  const handleTaskUpdated = updatedTask => {\n    // Update the task in the tasks state\n    setTasks(prev => prev.map(task => task._id === updatedTask._id ? updatedTask : task));\n    setEditingTask(null); // Exit editing mode\n  };\n  const handleEditInitiated = task => {\n    setEditingTask(task); // Set the task to be edited\n  };\n  const handleDeleteTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/tasks/${taskId}`);\n      setTasks(prev => prev.filter(task => task._id !== taskId)); // Remove the task from the state\n    } catch (error) {\n      console.error(\"Failed to delete task:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tasks Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), editingTask ? /*#__PURE__*/_jsxDEV(EditTaskForm, {\n      task: editingTask,\n      onTaskUpdated: handleTaskUpdated,\n      onCancel: () => setEditingTask(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AddTaskForm, {\n        onAddTask: handleAddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        onEditInitiated: handleEditInitiated,\n        onDeleteTask: handleDeleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nwiSLkn6Y0JvLhs83lscW/YeAV0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskList","AddTaskForm","EditTaskForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","tasks","setTasks","editingTask","setEditingTask","get","then","response","data","catch","error","console","handleAddTask","newTask","prev","handleTaskUpdated","updatedTask","map","task","_id","handleEditInitiated","handleDeleteTask","taskId","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onTaskUpdated","onCancel","onAddTask","onEditInitiated","onDeleteTask","_c","$RefreshReg$"],"sources":["D:/gamersback/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskList from \"./components/TaskList\";\nimport AddTaskForm from \"./components/AddTaskForm\";\nimport EditTaskForm from \"./components/EditTaskForm\"; // Import the new component\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [editingTask, setEditingTask] = useState(null); // State to track which task is being edited\n\n  useEffect(() => {\n    // Fetch tasks on component mount\n    axios\n      .get(\"http://localhost:5000/api/tasks\")\n      .then((response) => setTasks(response.data))\n      .catch((error) => console.error(\"Error fetching tasks:\", error));\n  }, []);\n\n  const handleAddTask = (newTask) => {\n    // Append the new task to the existing tasks state\n    setTasks((prev) => [...prev, newTask]);\n  };\n\n  const handleTaskUpdated = (updatedTask) => {\n    // Update the task in the tasks state\n    setTasks((prev) =>\n      prev.map((task) => (task._id === updatedTask._id ? updatedTask : task))\n    );\n    setEditingTask(null); // Exit editing mode\n  };\n\n  const handleEditInitiated = (task) => {\n    setEditingTask(task); // Set the task to be edited\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      await axios.delete(`http://localhost:5000/api/tasks/${taskId}`);\n      setTasks((prev) => prev.filter((task) => task._id !== taskId)); // Remove the task from the state\n    } catch (error) {\n      console.error(\"Failed to delete task:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Tasks Manager</h1>\n      {editingTask ? (\n        <EditTaskForm\n          task={editingTask}\n          onTaskUpdated={handleTaskUpdated}\n          onCancel={() => setEditingTask(null)}\n        />\n      ) : (\n        <>\n          <AddTaskForm onAddTask={handleAddTask} />\n          <TaskList\n            tasks={tasks}\n            onEditInitiated={handleEditInitiated}\n            onDeleteTask={handleDeleteTask}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}